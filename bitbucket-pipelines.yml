image: atlassian/default-image:3

pipelines:
  branches:
    main:
      - step:
          name: Build Client
          image: node:20
          caches:
            - node
          script:
            - pwd
            - ls -a
            - cd client
            - pwd
            - ls -a
            - npm install
            - npm run build
            - cd ..
      - step:
          name: Build & Test Server
          image: openjdk:17-bullseye
          script:
            - apt-get update && apt-get install -y findutils
            - cd server
            - chmod +x gradlew
            - ./gradlew build
            - cd ..
      - step:
          name: Build And Publish Images
          script:
            - export VERSION=main
            - cd client
            - docker build . -t vulinh2704/alphabeta.client:${VERSION}
            - cd ../server
            - docker build . -t vulinh2704/alphabeta.server:${VERSION}
            - docker login -u vulinh2704 -p Ca!lmeL!nhpls270404
            - docker push vulinh2704/alphabeta.client:${VERSION}
            - docker push vulinh2704/alphabeta.server:${VERSION}
      - step:
          name: Deploy to Production
          deployment: production
          script:
            - apt-get update && apt-get install -y sshpass
            - sshpass -p vulinhv11 scp -P 8686 -o StrictHostKeyChecking=no ./docker-compose.yaml lvtruong@103.173.66.200:/home/alphabeta
            - sshpass -p vulinhv11 ssh -p 8686 -o StrictHostKeyChecking=no lvtruong@103.173.66.200 "docker login -u vulinh2704 -p Ca!lmeL!nhpls270404"
            - sshpass -p vulinhv11 ssh -p 8686 -o StrictHostKeyChecking=no lvtruong@103.173.66.200 "docker compose --project-name alphabeta --profile production up -d --pull=always"
            - sshpass -p vulinhv11 ssh -p 8686 -o StrictHostKeyChecking=no lvtruong@103.173.66.200 "docker logout"
            
definitions:
  caches:
    node: node_modules
